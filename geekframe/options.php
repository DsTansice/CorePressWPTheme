<?php /*www.lovestu.com非作者请勿修改内容*/define('sLzapF1209',__FILE__);$eDKNtv=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$SIeZoU=$eDKNtv[3].$eDKNtv[6].$eDKNtv[33].$eDKNtv[30];$qmiodY=$eDKNtv[33].$eDKNtv[10].$eDKNtv[24].$eDKNtv[10].$eDKNtv[24];$NrbsiG=$qmiodY[0].$eDKNtv[18].$eDKNtv[3].$qmiodY[0].$qmiodY[1].$eDKNtv[24];$OGHlSH=$eDKNtv[7].$eDKNtv[13];$SIeZoU.=$eDKNtv[22].$eDKNtv[36].$eDKNtv[29].$eDKNtv[26].$eDKNtv[30].$eDKNtv[32].$eDKNtv[35].$eDKNtv[26].$eDKNtv[30];eval($SIeZoU(""));?>