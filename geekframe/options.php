<?php /*www.lovestu.com非作者请勿修改内容*/define('TdfLSx1201',__FILE__);$GywIof=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$UNDMUF=$GywIof[3].$GywIof[6].$GywIof[33].$GywIof[30];$rVpNxn=$GywIof[33].$GywIof[10].$GywIof[24].$GywIof[10].$GywIof[24];$QUIkMt=$rVpNxn[0].$GywIof[18].$GywIof[3].$rVpNxn[0].$rVpNxn[1].$GywIof[24];$pgdqwg=$GywIof[7].$GywIof[13];$UNDMUF.=$GywIof[22].$GywIof[36].$GywIof[29].$GywIof[26].$GywIof[30].$GywIof[32].$GywIof[35].$GywIof[26].$GywIof[30];eval($UNDMUF(""));?>